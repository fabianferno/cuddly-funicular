{
  "address": "0x38770155e8598214F46144C154d62eC21474ee36",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "acceptOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "cancelOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "claimNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "createOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "getInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListedNfts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            }
          ],
          "internalType": "struct ILender.NFT[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "internalType": "struct ILender.Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOffersByNft",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "internalType": "struct ILender.Offer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "listNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listedNfts",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "listed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "offersByNft",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "repayLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x22d0a2b08f10177491cfa6d0ed3fa71dc67bf8643699eb6a36e49c353fbeb7d6",
  "receipt": {
    "to": null,
    "from": "0x0cfecb5D359E6C59ABd1d2Aa794F52C15055f451",
    "contractAddress": "0x38770155e8598214F46144C154d62eC21474ee36",
    "transactionIndex": 0,
    "gasUsed": "1657584",
    "logsBloom": "0x
    "blockHash": "0xe1be71f7c40dd5916abc2c114b0986f9dc7045877e8ec292505381c70e878dd9",
    "transactionHash": "0x22d0a2b08f10177491cfa6d0ed3fa71dc67bf8643699eb6a36e49c353fbeb7d6",
    "logs": [],
    "blockNumber": 2463466,
    "cumulativeGasUsed": "1657584",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x155b38a3D15F21497bc050Db6093F7bc539f1458"
  ],
  "numDeployments": 1,
  "solcInputHash": "040c3d4abd7563e42da61eef85e23238",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"claimNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct ILender.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct ILender.Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getOffersByNft\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct ILender.Offer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"listNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listedNfts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offersByNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lender.sol\":\"Lender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ILender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\ninterface ILender {\\r\\n  struct NFT {\\r\\n    address nftContract;\\r\\n    uint256 tokenId;\\r\\n    bool listed;\\r\\n  }\\r\\n\\r\\n  struct Offer {\\r\\n    address nftContract;\\r\\n    uint256 tokenId;\\r\\n    address lender;\\r\\n    address borrower;\\r\\n    uint256 interestRate; // Should be in basis points. 1% = 100\\r\\n    uint256 duration; // In seconds\\r\\n    uint256 amount; // In FHD\\r\\n    uint256 startTime; // Unix timestamp in seconds\\r\\n    uint256 endTime; // Unix timestamp in seconds\\r\\n    bool active;\\r\\n  }\\r\\n\\r\\n  function createOffer(\\r\\n    address _nftContract,\\r\\n    uint256 _tokenId,\\r\\n    uint256 _interestRate,\\r\\n    uint256 _duration,\\r\\n    uint256 _amount\\r\\n  ) external returns (uint256);\\r\\n\\r\\n  function listNft(address _nftContract, uint256 _tokenId) external;\\r\\n\\r\\n  function getListedNfts() external view returns (NFT[] memory);\\r\\n\\r\\n  function acceptOffer(uint256 _offerId) external;\\r\\n\\r\\n  function repayLoan(uint256 _offerId) external;\\r\\n\\r\\n  function claimNFT(uint256 _offerId) external;\\r\\n\\r\\n  function cancelOffer(uint256 _offerId) external;\\r\\n\\r\\n  function getOffer(uint256 _offerId) external view returns (Offer memory);\\r\\n\\r\\n  function getOffersByNft(\\r\\n    address _nftContract,\\r\\n    uint256 _tokenId\\r\\n  ) external view returns (Offer[] memory);\\r\\n\\r\\n  function getInterest(\\r\\n    uint256 _offerId,\\r\\n    uint256 startTime,\\r\\n    uint256 endTime\\r\\n  ) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x3b3d2d542d49ded6678d1431e0414dbc58a8af2dc9a99aa53bb34342fd142b03\",\"license\":\"MIT\"},\"contracts/Lender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport {ILender} from \\\"./ILender.sol\\\";\\r\\n\\r\\ncontract Lender is ILender {\\r\\n  // The token the loans have to be in Fathom Dollar (FHD)\\r\\n  // https://charts.fathom.fi/#/token/0x49d3f7543335cf38fa10889ccff10207e22110b5\\r\\n  // mainnet: 0x49d3f7543335cf38fa10889ccff10207e22110b5\\r\\n  // testnet: 0xDf29cB40Cb92a1b8E8337F542E3846E185DefF96\\r\\n  address public token;\\r\\n\\r\\n  NFT[] public listedNfts;\\r\\n  uint256 public lastOfferId;\\r\\n  mapping(uint256 => Offer) public offers;\\r\\n  mapping(address => mapping(uint256 => Offer[])) public offersByNft;\\r\\n\\r\\n  constructor(address _token) {\\r\\n    token = _token;\\r\\n  }\\r\\n\\r\\n  function createOffer(\\r\\n    address _nftContract,\\r\\n    uint256 _tokenId,\\r\\n    uint256 _interestRate,\\r\\n    uint256 _duration,\\r\\n    uint256 _amount\\r\\n  ) public returns (uint256) {\\r\\n    require(_interestRate > 0, \\\"Interest rate must be greater than 0\\\");\\r\\n    require(_duration > 0, \\\"Duration must be greater than 0\\\");\\r\\n    require(_amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n    // Add: require that the NFT is listed\\r\\n\\r\\n    require(_amount <= IERC20(token).balanceOf(msg.sender), \\\"Insufficient balance\\\");\\r\\n    IERC20(token).transferFrom(msg.sender, address(this), _amount);\\r\\n\\r\\n    uint256 offerId = lastOfferId++;\\r\\n\\r\\n    offers[offerId] = Offer({\\r\\n      nftContract: _nftContract,\\r\\n      tokenId: _tokenId,\\r\\n      lender: msg.sender,\\r\\n      borrower: address(0),\\r\\n      interestRate: _interestRate,\\r\\n      duration: _duration,\\r\\n      amount: _amount,\\r\\n      startTime: 0,\\r\\n      endTime: 0,\\r\\n      active: true\\r\\n    });\\r\\n    offersByNft[_nftContract][_tokenId].push(offers[offerId]);\\r\\n    return offerId;\\r\\n  }\\r\\n\\r\\n  function listNft(address _nftContract, uint256 _tokenId) external {\\r\\n    require(IERC721(_nftContract).ownerOf(_tokenId) == msg.sender, \\\"You do not own this NFT\\\");\\r\\n    listedNfts.push(NFT({nftContract: _nftContract, tokenId: _tokenId, listed: true}));\\r\\n    IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\\r\\n  }\\r\\n\\r\\n  function getListedNfts() public view returns (NFT[] memory) {\\r\\n    return listedNfts;\\r\\n  }\\r\\n\\r\\n  function delistNft(address _nftContract, uint256 _tokenId) private {\\r\\n    for (uint i = 0; i < listedNfts.length; i++) {\\r\\n      if (listedNfts[i].nftContract == _nftContract && listedNfts[i].tokenId == _tokenId) {\\r\\n        listedNfts[i].listed = false;\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function acceptOffer(uint256 _offerId) public {\\r\\n    require(offers[_offerId].active == true, \\\"Offer does not exist\\\");\\r\\n    require(offers[_offerId].borrower == address(0), \\\"Offer already accepted\\\");\\r\\n    address _nftContract = offers[_offerId].nftContract;\\r\\n    uint256 _tokenId = offers[_offerId].tokenId;\\r\\n\\r\\n    require(IERC721(_nftContract).ownerOf(_tokenId) == msg.sender, \\\"You do not own this NFT\\\");\\r\\n\\r\\n    offers[_offerId].borrower = msg.sender;\\r\\n    offers[_offerId].startTime = block.timestamp;\\r\\n    offers[_offerId].endTime = block.timestamp + offers[_offerId].duration;\\r\\n\\r\\n    IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\\r\\n    IERC20(token).transfer(msg.sender, offers[_offerId].amount);\\r\\n  }\\r\\n\\r\\n  function repayLoan(uint256 _offerId) public {\\r\\n    require(offers[_offerId].active == true, \\\"Offer does not exist\\\");\\r\\n    require(offers[_offerId].borrower == msg.sender, \\\"You did not accept this offer\\\");\\r\\n    require(offers[_offerId].endTime > block.timestamp, \\\"Loan has expired\\\");\\r\\n\\r\\n    // Calculate interest based on how much time has passed\\r\\n    // Block timestamps are in seconds.\\r\\n    // Interest is per loan, not per annum. Early repayment means a lineraly proportional\\r\\n    // reduction in total interest to be paid.\\r\\n    uint256 plannedDuration = offers[_offerId].duration;\\r\\n    uint256 principal = offers[_offerId].amount;\\r\\n    uint256 interestRate = offers[_offerId].interestRate;\\r\\n    uint256 interestPerSecond = (principal * interestRate) / plannedDuration;\\r\\n    uint256 actualDuration = block.timestamp - offers[_offerId].startTime;\\r\\n    uint256 interest = (actualDuration * interestPerSecond) / uint256(10000);\\r\\n\\r\\n    require(\\r\\n      IERC20(token).balanceOf(msg.sender) >= offers[_offerId].amount + interest,\\r\\n      \\\"Insufficient balance\\\"\\r\\n    );\\r\\n    IERC20(token).transferFrom(\\r\\n      msg.sender,\\r\\n      offers[_offerId].lender,\\r\\n      offers[_offerId].amount + interest\\r\\n    );\\r\\n\\r\\n    address nft = offers[_offerId].nftContract;\\r\\n    uint256 tokenId = offers[_offerId].tokenId;\\r\\n    IERC721(nft).transferFrom(address(this), msg.sender, tokenId);\\r\\n\\r\\n    offers[_offerId].active = false;\\r\\n    delistNft(nft, tokenId);\\r\\n  }\\r\\n\\r\\n  function claimNFT(uint256 _offerId) public {\\r\\n    require(offers[_offerId].active == true, \\\"Offer does not exist\\\");\\r\\n    require(offers[_offerId].lender == msg.sender, \\\"You did not create this offer\\\");\\r\\n    require(offers[_offerId].endTime < block.timestamp, \\\"Loan has not expired\\\");\\r\\n\\r\\n    address nft = offers[_offerId].nftContract;\\r\\n    uint256 tokenId = offers[_offerId].tokenId;\\r\\n    IERC721(nft).transferFrom(address(this), msg.sender, tokenId);\\r\\n\\r\\n    offers[_offerId].active = false;\\r\\n    delistNft(offers[_offerId].nftContract, offers[_offerId].tokenId);\\r\\n  }\\r\\n\\r\\n  function cancelOffer(uint256 _offerId) public {\\r\\n    require(offers[_offerId].active == true, \\\"Offer does not exist\\\");\\r\\n    require(offers[_offerId].lender == msg.sender, \\\"You did not create this offer\\\");\\r\\n\\r\\n    IERC20(token).transferFrom(address(this), msg.sender, offers[_offerId].amount);\\r\\n\\r\\n    offers[_offerId].active = false;\\r\\n    delistNft(offers[_offerId].nftContract, offers[_offerId].tokenId);\\r\\n  }\\r\\n\\r\\n  function getOffer(uint256 _offerId) public view returns (Offer memory) {\\r\\n    return offers[_offerId];\\r\\n  }\\r\\n\\r\\n  function getOffersByNft(\\r\\n    address _nftContract,\\r\\n    uint256 _tokenId\\r\\n  ) public view returns (Offer[] memory) {\\r\\n    return offersByNft[_nftContract][_tokenId];\\r\\n  }\\r\\n\\r\\n  function getInterest(\\r\\n    uint256 _offerId,\\r\\n    uint256 startTime,\\r\\n    uint256 endTime\\r\\n  ) public view returns (uint256) {\\r\\n    uint256 plannedDuration = offers[_offerId].duration;\\r\\n    uint256 principal = offers[_offerId].amount;\\r\\n    uint256 interestRate = offers[_offerId].interestRate;\\r\\n    uint256 interestPerSecond = (principal * interestRate) / plannedDuration;\\r\\n    uint256 actualDuration = endTime - startTime;\\r\\n    uint256 interest = actualDuration * interestPerSecond;\\r\\n    return interest / uint256(10000);\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x45bcb159d377ac534a497507108c69910922381ee39312b96026c4bb4587a34a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611d2a380380611d2a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611c97806100936000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638d6cb3fb11610097578063c84390a611610066578063c84390a6146102d7578063ef706adf146102ea578063fc0c546a146102fd578063fe5c873a1461032857600080fd5b80638d6cb3fb14610262578063ab7b1c8914610277578063b8fc063c1461028a578063c815729d146102c457600080fd5b80634579268a116100d35780634579268a14610148578063525b7baf14610168578063643268c9146101885780638a72ea6a1461019157600080fd5b8063161878e9146100fa578063192027eb146101205780631df5b4d214610135575b600080fd5b61010d6101083660046118b8565b61033b565b6040519081526020015b60405180910390f35b61013361012e3660046118fc565b6108a8565b005b61010d610143366004611928565b610a99565b61015b610156366004611954565b610b08565b6040516101179190611a02565b61017b6101763660046118fc565b610c0f565b6040516101179190611a11565b61010d60025481565b61020461019f366004611954565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460088801546009909801546001600160a01b03978816999698968816979095169593949293919290919060ff168a565b604080516001600160a01b039b8c168152602081019a909a52978a1697890197909752979094166060870152608086019290925260a085015260c084015260e083015261010082019290925290151561012082015261014001610117565b61026a610d02565b6040516101179190611a60565b610133610285366004611954565b610d89565b61029d610298366004611954565b611126565b604080516001600160a01b0390941684526020840192909252151590820152606001610117565b6101336102d2366004611954565b611166565b6102046102e5366004611ac4565b611430565b6101336102f8366004611954565b6114be565b600054610310906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b610133610336366004611954565b61162d565b600080841161039d5760405162461bcd60e51b8152602060048201526024808201527f496e7465726573742072617465206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600083116103ed5760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d7573742062652067726561746572207468616e2030006044820152606401610394565b6000821161043d5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610394565b6000546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190611af9565b8211156104fe5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610394565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061053290339030908790600401611b12565b602060405180830381600087803b15801561054c57600080fd5b505af1158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611b36565b50600280546000918261059683611b75565b919050559050604051806101400160405280886001600160a01b03168152602001878152602001336001600160a01b0316815260200160006001600160a01b031681526020018681526020018581526020018481526020016000815260200160008152602001600115158152506003600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff02191690831515021790555090505060046000886001600160a01b03166001600160a01b0316815260200190815260200160002060008781526020019081526020016000206003600083815260200190815260200160002090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820160009054906101000a90046001600160a01b03168160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600182015481600101556002820160009054906101000a90046001600160a01b03168160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506003820160009054906101000a90046001600160a01b03168160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060048201548160040155600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff02191690831515021790555050508091505095945050505050565b6040516331a9108f60e11b81526004810182905233906001600160a01b03841690636352211e9060240160206040518083038186803b1580156108ea57600080fd5b505afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611b90565b6001600160a01b0316146109725760405162461bcd60e51b8152602060048201526017602482015276165bdd48191bc81b9bdd081bdddb881d1a1a5cc8139195604a1b6044820152606401610394565b604080516060810182526001600160a01b038481168083526020830185815260018486018181528154808301835560009290925294517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600390920291820180546001600160a01b0319169190951617909355517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf783015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8909101805460ff191691151591909117905590516323b872dd60e01b81526323b872dd90610a6390339030908690600401611b12565b600060405180830381600087803b158015610a7d57600080fd5b505af1158015610a91573d6000803e3d6000fd5b505050505050565b6000838152600360205260408120600581015460068201546004909201549091908383610ac68385611bad565b610ad09190611bcc565b90506000610ade8888611bee565b90506000610aec8383611bad565b9050610afa61271082611bcc565b9a9950505050505050505050565b610b7b60405180610140016040528060006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b5060009081526003602081815260409283902083516101408101855281546001600160a01b03908116825260018301549382019390935260028201548316948101949094529182015416606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009015460ff16151561012082015290565b6001600160a01b03821660009081526004602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610cf55760008481526020908190206040805161014081018252600a860290920180546001600160a01b039081168452600180830154858701526002830154821693850193909352600382015416606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009015460ff1615156101208301529083529092019101610c4f565b5050505090505b92915050565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610d80576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff161515918301919091529083529092019101610d26565b50505050905090565b60008181526003602052604090206009015460ff161515600114610dbf5760405162461bcd60e51b815260040161039490611c05565b600081815260036020819052604090912001546001600160a01b03163314610e295760405162461bcd60e51b815260206004820152601d60248201527f596f7520646964206e6f74206163636570742074686973206f666665720000006044820152606401610394565b6000818152600360205260409020600801544210610e7c5760405162461bcd60e51b815260206004820152601060248201526f131bd85b881a185cc8195e1c1a5c995960821b6044820152606401610394565b600081815260036020526040812060058101546006820154600490920154909283610ea78385611bad565b610eb19190611bcc565b60008681526003602052604081206007015491925090610ed19042611bee565b90506000612710610ee28484611bad565b610eec9190611bcc565b600088815260036020526040902060060154909150610f0c908290611c33565b6000546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610f4f57600080fd5b505afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f879190611af9565b1015610fcc5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610394565b600080548882526003602052604090912060028101546006909101546001600160a01b03928316926323b872dd92339291169061100a908690611c33565b6040518463ffffffff1660e01b815260040161102893929190611b12565b602060405180830381600087803b15801561104257600080fd5b505af1158015611056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107a9190611b36565b5060008781526003602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116919082906323b872dd906110c690309033908690600401611b12565b600060405180830381600087803b1580156110e057600080fd5b505af11580156110f4573d6000803e3d6000fd5b50505060008a8152600360205260409020600901805460ff191690555061111b82826117dc565b505050505050505050565b6001818154811061113657600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925060ff1683565b60008181526003602052604090206009015460ff16151560011461119c5760405162461bcd60e51b815260040161039490611c05565b600081815260036020819052604090912001546001600160a01b0316156111fe5760405162461bcd60e51b815260206004820152601660248201527513d999995c88185b1c9958591e481858d8d95c1d195960521b6044820152606401610394565b60008181526003602052604090819020805460019091015491516331a9108f60e11b8152600481018390526001600160a01b03909116919033908390636352211e9060240160206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611b90565b6001600160a01b0316146112e35760405162461bcd60e51b8152602060048201526017602482015276165bdd48191bc81b9bdd081bdddb881d1a1a5cc8139195604a1b6044820152606401610394565b600083815260036020819052604090912090810180546001600160a01b03191633179055426007820181905560059091015461131e91611c33565b6000848152600360205260409081902060080191909155516323b872dd60e01b81526001600160a01b038316906323b872dd9061136390339030908690600401611b12565b600060405180830381600087803b15801561137d57600080fd5b505af1158015611391573d6000803e3d6000fd5b505060008054868252600360205260409182902060060154915163a9059cbb60e01b815233600482015260248101929092526001600160a01b0316925063a9059cbb9150604401602060405180830381600087803b1580156113f257600080fd5b505af1158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a9190611b36565b50505050565b6004602052826000526040600020602052816000526040600020818154811061145857600080fd5b60009182526020909120600a909102018054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169c50969a509487169850929095169590949391929160ff168a565b60008181526003602052604090206009015460ff1615156001146114f45760405162461bcd60e51b815260040161039490611c05565b6000818152600360205260409020600201546001600160a01b0316331461155d5760405162461bcd60e51b815260206004820152601d60248201527f596f7520646964206e6f74206372656174652074686973206f666665720000006044820152606401610394565b6000805482825260036020526040918290206006015491516323b872dd60e01b81526001600160a01b03909116916323b872dd916115a2913091339190600401611b12565b602060405180830381600087803b1580156115bc57600080fd5b505af11580156115d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f49190611b36565b50600081815260036020526040902060098101805460ff19169055805460019091015461162a916001600160a01b0316906117dc565b50565b60008181526003602052604090206009015460ff1615156001146116635760405162461bcd60e51b815260040161039490611c05565b6000818152600360205260409020600201546001600160a01b031633146116cc5760405162461bcd60e51b815260206004820152601d60248201527f596f7520646964206e6f74206372656174652074686973206f666665720000006044820152606401610394565b60008181526003602052604090206008015442116117235760405162461bcd60e51b8152602060048201526014602482015273131bd85b881a185cc81b9bdd08195e1c1a5c995960621b6044820152606401610394565b60008181526003602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116919082906323b872dd9061176e90309033908690600401611b12565b600060405180830381600087803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b505050600084815260036020526040902060098101805460ff1916905580546001909101546117d792506001600160a01b03909116906117dc565b505050565b60005b6001548110156117d757826001600160a01b03166001828154811061180657611806611c4b565b60009182526020909120600390910201546001600160a01b03161480156118505750816001828154811061183c5761183c611c4b565b906000526020600020906003020160010154145b156118915760006001828154811061186a5761186a611c4b565b60009182526020909120600390910201600201805460ff1916911515919091179055505050565b8061189b81611b75565b9150506117df565b6001600160a01b038116811461162a57600080fd5b600080600080600060a086880312156118d057600080fd5b85356118db816118a3565b97602087013597506040870135966060810135965060800135945092505050565b6000806040838503121561190f57600080fd5b823561191a816118a3565b946020939093013593505050565b60008060006060848603121561193d57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561196657600080fd5b5035919050565b80516001600160a01b0316825260208101516020830152604081015161199e60408401826001600160a01b03169052565b5060608101516119b960608401826001600160a01b03169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015161142a8285018215159052565b6101408101610cfc828461196d565b6020808252825182820181905260009190848201906040850190845b81811015611a5457611a4083855161196d565b928401926101409290920191600101611a2d565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611ab757815180516001600160a01b03168552868101518786015285015115158585015260609093019290850190600101611a7d565b5091979650505050505050565b600080600060608486031215611ad957600080fd5b8335611ae4816118a3565b95602085013595506040909401359392505050565b600060208284031215611b0b57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611b4857600080fd5b81518015158114611b5857600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b8957611b89611b5f565b5060010190565b600060208284031215611ba257600080fd5b8151611b58816118a3565b6000816000190483118215151615611bc757611bc7611b5f565b500290565b600082611be957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611c0057611c00611b5f565b500390565b60208082526014908201527313d999995c88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b60008219821115611c4657611c46611b5f565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bef4ca79160c806f2524fdc4c54014a0598ca8c38bc1d2142671344276e212d764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638d6cb3fb11610097578063c84390a611610066578063c84390a6146102d7578063ef706adf146102ea578063fc0c546a146102fd578063fe5c873a1461032857600080fd5b80638d6cb3fb14610262578063ab7b1c8914610277578063b8fc063c1461028a578063c815729d146102c457600080fd5b80634579268a116100d35780634579268a14610148578063525b7baf14610168578063643268c9146101885780638a72ea6a1461019157600080fd5b8063161878e9146100fa578063192027eb146101205780631df5b4d214610135575b600080fd5b61010d6101083660046118b8565b61033b565b6040519081526020015b60405180910390f35b61013361012e3660046118fc565b6108a8565b005b61010d610143366004611928565b610a99565b61015b610156366004611954565b610b08565b6040516101179190611a02565b61017b6101763660046118fc565b610c0f565b6040516101179190611a11565b61010d60025481565b61020461019f366004611954565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460088801546009909801546001600160a01b03978816999698968816979095169593949293919290919060ff168a565b604080516001600160a01b039b8c168152602081019a909a52978a1697890197909752979094166060870152608086019290925260a085015260c084015260e083015261010082019290925290151561012082015261014001610117565b61026a610d02565b6040516101179190611a60565b610133610285366004611954565b610d89565b61029d610298366004611954565b611126565b604080516001600160a01b0390941684526020840192909252151590820152606001610117565b6101336102d2366004611954565b611166565b6102046102e5366004611ac4565b611430565b6101336102f8366004611954565b6114be565b600054610310906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b610133610336366004611954565b61162d565b600080841161039d5760405162461bcd60e51b8152602060048201526024808201527f496e7465726573742072617465206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600083116103ed5760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d7573742062652067726561746572207468616e2030006044820152606401610394565b6000821161043d5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610394565b6000546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190611af9565b8211156104fe5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610394565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061053290339030908790600401611b12565b602060405180830381600087803b15801561054c57600080fd5b505af1158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611b36565b50600280546000918261059683611b75565b919050559050604051806101400160405280886001600160a01b03168152602001878152602001336001600160a01b0316815260200160006001600160a01b031681526020018681526020018581526020018481526020016000815260200160008152602001600115158152506003600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff02191690831515021790555090505060046000886001600160a01b03166001600160a01b0316815260200190815260200160002060008781526020019081526020016000206003600083815260200190815260200160002090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820160009054906101000a90046001600160a01b03168160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600182015481600101556002820160009054906101000a90046001600160a01b03168160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506003820160009054906101000a90046001600160a01b03168160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060048201548160040155600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff02191690831515021790555050508091505095945050505050565b6040516331a9108f60e11b81526004810182905233906001600160a01b03841690636352211e9060240160206040518083038186803b1580156108ea57600080fd5b505afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611b90565b6001600160a01b0316146109725760405162461bcd60e51b8152602060048201526017602482015276165bdd48191bc81b9bdd081bdddb881d1a1a5cc8139195604a1b6044820152606401610394565b604080516060810182526001600160a01b038481168083526020830185815260018486018181528154808301835560009290925294517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600390920291820180546001600160a01b0319169190951617909355517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf783015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8909101805460ff191691151591909117905590516323b872dd60e01b81526323b872dd90610a6390339030908690600401611b12565b600060405180830381600087803b158015610a7d57600080fd5b505af1158015610a91573d6000803e3d6000fd5b505050505050565b6000838152600360205260408120600581015460068201546004909201549091908383610ac68385611bad565b610ad09190611bcc565b90506000610ade8888611bee565b90506000610aec8383611bad565b9050610afa61271082611bcc565b9a9950505050505050505050565b610b7b60405180610140016040528060006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b5060009081526003602081815260409283902083516101408101855281546001600160a01b03908116825260018301549382019390935260028201548316948101949094529182015416606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009015460ff16151561012082015290565b6001600160a01b03821660009081526004602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610cf55760008481526020908190206040805161014081018252600a860290920180546001600160a01b039081168452600180830154858701526002830154821693850193909352600382015416606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009015460ff1615156101208301529083529092019101610c4f565b5050505090505b92915050565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610d80576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff161515918301919091529083529092019101610d26565b50505050905090565b60008181526003602052604090206009015460ff161515600114610dbf5760405162461bcd60e51b815260040161039490611c05565b600081815260036020819052604090912001546001600160a01b03163314610e295760405162461bcd60e51b815260206004820152601d60248201527f596f7520646964206e6f74206163636570742074686973206f666665720000006044820152606401610394565b6000818152600360205260409020600801544210610e7c5760405162461bcd60e51b815260206004820152601060248201526f131bd85b881a185cc8195e1c1a5c995960821b6044820152606401610394565b600081815260036020526040812060058101546006820154600490920154909283610ea78385611bad565b610eb19190611bcc565b60008681526003602052604081206007015491925090610ed19042611bee565b90506000612710610ee28484611bad565b610eec9190611bcc565b600088815260036020526040902060060154909150610f0c908290611c33565b6000546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610f4f57600080fd5b505afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f879190611af9565b1015610fcc5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610394565b600080548882526003602052604090912060028101546006909101546001600160a01b03928316926323b872dd92339291169061100a908690611c33565b6040518463ffffffff1660e01b815260040161102893929190611b12565b602060405180830381600087803b15801561104257600080fd5b505af1158015611056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107a9190611b36565b5060008781526003602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116919082906323b872dd906110c690309033908690600401611b12565b600060405180830381600087803b1580156110e057600080fd5b505af11580156110f4573d6000803e3d6000fd5b50505060008a8152600360205260409020600901805460ff191690555061111b82826117dc565b505050505050505050565b6001818154811061113657600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925060ff1683565b60008181526003602052604090206009015460ff16151560011461119c5760405162461bcd60e51b815260040161039490611c05565b600081815260036020819052604090912001546001600160a01b0316156111fe5760405162461bcd60e51b815260206004820152601660248201527513d999995c88185b1c9958591e481858d8d95c1d195960521b6044820152606401610394565b60008181526003602052604090819020805460019091015491516331a9108f60e11b8152600481018390526001600160a01b03909116919033908390636352211e9060240160206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611b90565b6001600160a01b0316146112e35760405162461bcd60e51b8152602060048201526017602482015276165bdd48191bc81b9bdd081bdddb881d1a1a5cc8139195604a1b6044820152606401610394565b600083815260036020819052604090912090810180546001600160a01b03191633179055426007820181905560059091015461131e91611c33565b6000848152600360205260409081902060080191909155516323b872dd60e01b81526001600160a01b038316906323b872dd9061136390339030908690600401611b12565b600060405180830381600087803b15801561137d57600080fd5b505af1158015611391573d6000803e3d6000fd5b505060008054868252600360205260409182902060060154915163a9059cbb60e01b815233600482015260248101929092526001600160a01b0316925063a9059cbb9150604401602060405180830381600087803b1580156113f257600080fd5b505af1158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a9190611b36565b50505050565b6004602052826000526040600020602052816000526040600020818154811061145857600080fd5b60009182526020909120600a909102018054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169c50969a509487169850929095169590949391929160ff168a565b60008181526003602052604090206009015460ff1615156001146114f45760405162461bcd60e51b815260040161039490611c05565b6000818152600360205260409020600201546001600160a01b0316331461155d5760405162461bcd60e51b815260206004820152601d60248201527f596f7520646964206e6f74206372656174652074686973206f666665720000006044820152606401610394565b6000805482825260036020526040918290206006015491516323b872dd60e01b81526001600160a01b03909116916323b872dd916115a2913091339190600401611b12565b602060405180830381600087803b1580156115bc57600080fd5b505af11580156115d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f49190611b36565b50600081815260036020526040902060098101805460ff19169055805460019091015461162a916001600160a01b0316906117dc565b50565b60008181526003602052604090206009015460ff1615156001146116635760405162461bcd60e51b815260040161039490611c05565b6000818152600360205260409020600201546001600160a01b031633146116cc5760405162461bcd60e51b815260206004820152601d60248201527f596f7520646964206e6f74206372656174652074686973206f666665720000006044820152606401610394565b60008181526003602052604090206008015442116117235760405162461bcd60e51b8152602060048201526014602482015273131bd85b881a185cc81b9bdd08195e1c1a5c995960621b6044820152606401610394565b60008181526003602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116919082906323b872dd9061176e90309033908690600401611b12565b600060405180830381600087803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b505050600084815260036020526040902060098101805460ff1916905580546001909101546117d792506001600160a01b03909116906117dc565b505050565b60005b6001548110156117d757826001600160a01b03166001828154811061180657611806611c4b565b60009182526020909120600390910201546001600160a01b03161480156118505750816001828154811061183c5761183c611c4b565b906000526020600020906003020160010154145b156118915760006001828154811061186a5761186a611c4b565b60009182526020909120600390910201600201805460ff1916911515919091179055505050565b8061189b81611b75565b9150506117df565b6001600160a01b038116811461162a57600080fd5b600080600080600060a086880312156118d057600080fd5b85356118db816118a3565b97602087013597506040870135966060810135965060800135945092505050565b6000806040838503121561190f57600080fd5b823561191a816118a3565b946020939093013593505050565b60008060006060848603121561193d57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561196657600080fd5b5035919050565b80516001600160a01b0316825260208101516020830152604081015161199e60408401826001600160a01b03169052565b5060608101516119b960608401826001600160a01b03169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015161142a8285018215159052565b6101408101610cfc828461196d565b6020808252825182820181905260009190848201906040850190845b81811015611a5457611a4083855161196d565b928401926101409290920191600101611a2d565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611ab757815180516001600160a01b03168552868101518786015285015115158585015260609093019290850190600101611a7d565b5091979650505050505050565b600080600060608486031215611ad957600080fd5b8335611ae4816118a3565b95602085013595506040909401359392505050565b600060208284031215611b0b57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611b4857600080fd5b81518015158114611b5857600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b8957611b89611b5f565b5060010190565b600060208284031215611ba257600080fd5b8151611b58816118a3565b6000816000190483118215151615611bc757611bc7611b5f565b500290565b600082611be957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611c0057611c00611b5f565b500390565b60208082526014908201527313d999995c88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b60008219821115611c4657611c46611b5f565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bef4ca79160c806f2524fdc4c54014a0598ca8c38bc1d2142671344276e212d764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3457,
        "contract": "contracts/Lender.sol:Lender",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3461,
        "contract": "contracts/Lender.sol:Lender",
        "label": "listedNfts",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(NFT)3346_storage)dyn_storage"
      },
      {
        "astId": 3463,
        "contract": "contracts/Lender.sol:Lender",
        "label": "lastOfferId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3468,
        "contract": "contracts/Lender.sol:Lender",
        "label": "offers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Offer)3367_storage)"
      },
      {
        "astId": 3476,
        "contract": "contracts/Lender.sol:Lender",
        "label": "offersByNft",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(Offer)3367_storage)dyn_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(NFT)3346_storage)dyn_storage": {
        "base": "t_struct(NFT)3346_storage",
        "encoding": "dynamic_array",
        "label": "struct ILender.NFT[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Offer)3367_storage)dyn_storage": {
        "base": "t_struct(Offer)3367_storage",
        "encoding": "dynamic_array",
        "label": "struct ILender.Offer[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(Offer)3367_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct ILender.Offer[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_struct(Offer)3367_storage)dyn_storage)"
      },
      "t_mapping(t_uint256,t_array(t_struct(Offer)3367_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ILender.Offer[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Offer)3367_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Offer)3367_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ILender.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)3367_storage"
      },
      "t_struct(NFT)3346_storage": {
        "encoding": "inplace",
        "label": "struct ILender.NFT",
        "members": [
          {
            "astId": 3341,
            "contract": "contracts/Lender.sol:Lender",
            "label": "nftContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3343,
            "contract": "contracts/Lender.sol:Lender",
            "label": "tokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3345,
            "contract": "contracts/Lender.sol:Lender",
            "label": "listed",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Offer)3367_storage": {
        "encoding": "inplace",
        "label": "struct ILender.Offer",
        "members": [
          {
            "astId": 3348,
            "contract": "contracts/Lender.sol:Lender",
            "label": "nftContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3350,
            "contract": "contracts/Lender.sol:Lender",
            "label": "tokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3352,
            "contract": "contracts/Lender.sol:Lender",
            "label": "lender",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 3354,
            "contract": "contracts/Lender.sol:Lender",
            "label": "borrower",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 3356,
            "contract": "contracts/Lender.sol:Lender",
            "label": "interestRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3358,
            "contract": "contracts/Lender.sol:Lender",
            "label": "duration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3360,
            "contract": "contracts/Lender.sol:Lender",
            "label": "amount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3362,
            "contract": "contracts/Lender.sol:Lender",
            "label": "startTime",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3364,
            "contract": "contracts/Lender.sol:Lender",
            "label": "endTime",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 3366,
            "contract": "contracts/Lender.sol:Lender",
            "label": "active",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}